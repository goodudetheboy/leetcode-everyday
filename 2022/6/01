Running Sum of 1d Array (Easy) https://leetcode.com/problems/running-sum-of-1d-array/

--------------------------
Insert Interval (Medium) https://leetcode.com/problems/insert-interval/
Initial thought: I spent way too long on this problem. It's too embarrassing to talk about my initial thoughts anymore. My code looks more spaghetti than spaghetti itself.

Solution: Optimal in theory, but my code blinds your eye.

What to learn: Fuck this.

--------------------------
Plus One (Easy) https://leetcode.com/problems/plus-one/

--------------------------
Remove Duplicates from Sorted Array II (Medium) https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/

--------------------------
Combination Sum (Medium) https://leetcode.com/problems/combination-sum/
Initial thought: Fuck I thought this was a simple DFS, but then the unique parts hit. And I just stucks there. God bless. I then resort to my Google-fu for help. And I actually learnt something quite nice.

Solution: It's just dfs as normal, but to avoid the duplicates part, we just need to incrementally restrict the candidates. We first move deeper with the same index, but then we will move next with index+1, effectively restricting the pool, preventing duplicates. Damn that is smart. I learnt something new!

What to learn: Backtracking and duplicates avoiding techniques.

--------------------------
Combination Sum II (Medium) https://leetcode.com/problems/combination-sum-ii/
Initial thought: It's a follow-up of previous. Simple sorting and duplicate avoiding will do.

Solution: Optimal, but there is also this "early stopping" tech that really helps improve runtime. Learnt.

What to learn: Early stoppping tech.

--------------------------
Combination Sum III (Medium) https://leetcode.com/problems/combination-sum-iii/

--------------------------
Roman to Integer (Easy) https://leetcode.com/problems/roman-to-integer/
