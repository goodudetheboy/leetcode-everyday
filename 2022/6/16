Decode String (Medium) https://leetcode.com/problems/decode-string/
Initial thought: I attempted this while on a trip with my mom, but wasn't able to solve it since I was doing it on my phone lmao. Then when I come back with a fresh mind I solved it right away. Easy.

Solution: Optimal. Though it seems in the Discussion that's wiser to do it with stack. Will TODO.

What to learn: Iterative approach to these kinds of problem using stack.

--------------------------
Distant Barcodes (Medium) https://leetcode.com/problems/distant-barcodes/

--------------------------
Reorganize String (Medium) https://leetcode.com/problems/reorganize-string/
Initial thought: This problem is quite interesting. I solved this initially using PQ, just like the last one, but there is a neat little trick to change the O(nlogn) to O(n).

Solution: Instead of caring about the most common letters all throughout creating the string, we care only the first common. If that common is more than (s.length+1)/2, then it's impossible, otherwise just alternately put common, then just traverse through the alphabet to put the remaining. O(n). Damn.

What to learn: This neat little trick of not needing PQ.

--------------------------
Car Pooling (Medium) https://leetcode.com/problems/car-pooling/

--------------------------
IPO (Hard) https://leetcode.com/problems/ipo/
Initial thought: So what we need now is a greedy way of doing project. We need the project with the maximum profit and capital less than our current capital. I thought of doing a TreeMap, but it didn't pan out, so I just resort to using Disc anyway.

Solution: There are tons of approach to this problem. The one I like most is using min capital heap and a max profit heap. Add to the max profit heap until the min capital is out, then just take the poll. Done. Nice and elegant. But the runtime is fucking horrendous. There is another approach, where if all capital is under the given capital, then we just need to k-item heap it, if not, then just brute force through it. Like, what the fuck?

What to learn: Some real wacky tech like this.
