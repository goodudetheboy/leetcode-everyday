Subsets (Medium) https://leetcode.com/problems/subsets/

--------------------------
Subsets II (Medium) https://leetcode.com/problems/subsets-ii/

--------------------------
Jump Game (Medium) https://leetcode.com/problems/jump-game/
Initial thought: This is the problem where I think more complicated than necessary. We don't need to trace the steps, we just need to whether we can reach it. I essentially just bruteforce from the way back. And the result is, you guess it, TLE baby.

Solution: Keep track of max reach, traverse the array, if current index is more than max, you know we can't reach the end. It's that simple. And I couldn't do it. wtf.

What to learn: Keep thigs simple in your mind.

--------------------------
Jump Game II (Medium) https://leetcode.com/problems/jump-game-ii/

--------------------------
Jump Game III (Medium) https://leetcode.com/problems/jump-game-iii/

--------------------------
Jump Game IV (Hard) https://leetcode.com/problems/jump-game-iv/
Initial thought: This is just simple bfs with visited bookkeeping and hashtable for similar values. Only problems are is that my original implementation is, even though it's "optimal" in theory, but still receives TLE. I went to Solution to check out some optimization.

Solution: Turns out my approach is correct, but a problem is that once your check same indices of arr[i], you don't need to check it again if you encounter it later. So after you have checked it once, just clear the data, and you don't have to spend the extra time looking through it again.

What to learn: This is some real wacky optimization. TODO for sure!

--------------------------
Count Primes (Medium) https://leetcode.com/problems/count-primes/

--------------------------
Cheapest Flights Within K Stops (Medium) https://leetcode.com/problems/cheapest-flights-within-k-stops/
Initial thought: I implemented a BFS approach for this, but I get TLE. Don't know how else to do it lmao.

Solution: Bellman Ford or whatever it's called. This is a deffo TOLEARN for sure.

What to learn: Bellman Ford and Djikstra BFS.
