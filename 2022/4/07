Last Stone Weight (Easy) https://leetcode.com/problems/last-stone-weight/
Initial thought: Simple reverse priority queue problem.

Solution: Optimal.

What to learn: PQ problem and where and how to apply it.

--------------------------
Reverse Words in a String III (Easy) https://leetcode.com/problems/reverse-words-in-a-string-iii/
Initial thought: Just find until I find an ' ' and reverse array. Then add to string array. But then you can implement a stack. Fuck I didn't thought of that. THen I implemented a stack and the runtime was even worse.

Solution: Optimal.

What to learn: THINK TWICE IF IT GETS TOO YUCKY. EVERYTHING CAN BE SOLVED REALLY SMOOTHLY. IF THE ALGO IS NOT SMOOTH IT'S PROBABLY NOT EFFICIENT.

--------------------------
Two Sum II - Input Array Is Sorted (Medium) https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/
Initial thought: Ez two pointer problem. I also thought of finding the index of target/2, but that was too complicated, so I dropped that idea lol.

Solution: Optimal.

What to learn: Variation of binary search. Fuck bin search in particular.

--------------------------
Longest Substring Without Repeating Characters (Medium) https://leetcode.com/problems/longest-substring-without-repeating-characters/
Initial thought: Just keep track of using HashSet. But then I found out some problem and switched to using HashMap instead. But Discussion use HashSet, but conceptually I still got the optimal solution.

Solution: Optimal.

What to learn: HashSet and HashMap and where to apply them.

--------------------------
Kth Largest Element in a Stream (Easy) https://leetcode.com/problems/kth-largest-element-in-a-stream/
Initial thought: Easy. Just add heap. Then add then just to top. Done.

Solution: Optimal. In spirit I guess.

What to learn: PQ application.
