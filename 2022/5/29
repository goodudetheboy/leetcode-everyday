Maximum Product of Word Lengths (Medium) https://leetcode.com/problems/maximum-product-of-word-lengths/
Initial thought: I have to be honest man, bit manipulation LC is weird. I just can't wrap my head around binary shit, yet. So for this one I thought of creating a 26 bit rep of the alphabets of individual words, and just O(n^2) loop through the list. That's all.

Solution: Semi-optimal. I was going somewhere with my bit manipulation tech. They use bitmask to shift accordingly and OR the original one instead, while I use a boolean array then convert to that. FUCK I was dumb.

What to learn: Bit manipulation. I feel like this might be one of the questions on some obscure ass tech company in Ohio.

--------------------------
Convert Sorted List to Binary Search Tree (Medium) https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/
Initial thought: I think something went wrong with my DFS intuition. Shit just poof with LL problem. I solved this with putting number into array, which is time optimal, but not space.

Solution: You can find the mid by slow-fast pointer. Damn I HAVE TO keep this tech in mind.

What to learn: Keep in mind the slow-fast pointer in case you want to move around in a LL.

--------------------------
Design Linked List (Medium) https://leetcode.com/problems/design-linked-list/
Initial thought: I don't think linked list will be given as an interview question, so to hell with this, I'm opting for Discussion. I actually have a partially working solution. But who gives a shit lmao.

Solution: It's LL. Nothing is simpler than this.

What to learn: Nothing.

--------------------------
Linked List Components (Medium) https://leetcode.com/problems/linked-list-components/
Initial thought: This is a simple Set problem. Upon reading the prompt carefully, I noticed that the value is restricted in 0 and n, and unique, so I use array to bookkeep position of nums. Easy time improvement.

Solution: Optimal.

What to learn: Nothing.
